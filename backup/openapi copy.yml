openapi: 3.0.3
info:
  title: Tang Juan API
  version: 0.1.0
  description: |-

    This is the API documentation for the Tang Juan API.
    ---

    # Auth
    To get a **SecurityToken**:
    1. Create a **Account** with `POST /accounts/registration``
    2. Get a **SecurityToken** by calling `POST /sessions`` with your **Account** credentials.

  contact:
    name: Tang Juan API Support Team
    email: river1440@gmail.com

tags:
  - name: Accounts
    description: Accounts and Sessions related operations
  - name: Profiles
    description: Profiles related operations
  - name: Tags
    description: Tags and Tag Categories related operations
  - name: Projects
    description: Projects and Files related operations
servers:
  - url: https://njfps-backend-api.onrender.com
paths:
  /accounts/registration:
    post:
      tags:
      - Accounts
      summary: Start registering An Account
      operationId: registerAccount
      responses:
        '202':
          description: Accepted the request for registering a new account
          headers:
            Location:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: tangjuan.com@gmail.com
      security: []
  /accounts/registration/{token}:
    parameters:
      - schema:
          type: string
        name: token
        in: path
        required: true
    get:
      tags:
      - Accounts
      summary: Get An Account with unfinished registered
      operationId: viewAccountWithAuthNToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
      security: []
    post:
      tags:
      - Accounts
      summary: Finish registering An Account
      operationId: registerAccountWithAuthNToken
      responses:
        '201':
          description: Account Created
          headers:
            Location:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: tangjuan.com@gmail.com
      security: []
  /accounts/sessions:
    post:
      tags:
      - Accounts
      summary: Start Account Session (Login)
      operationId: startAccountSession
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      security: []
  /accounts/sessions/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      tags:
      - Accounts
      summary: Delete Account Session (Logout)
      operationId: deleteAccountSessionWithId
      responses:
        '204':
          description: No Content
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
  /accounts/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      tags:
      - Accounts
      summary: View Account
      operationId: viewAccountWithId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      tags:
      - Accounts
      summary: Modify Account
      operationId: modifyAccountWithId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
    delete:
      tags:
      - Accounts
      summary: Delete Account
      operationId: deleteAccountWithId
      responses:
        '204':
          description: No Content
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
  /accounts/{id}/tags:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      tags:
      - Accounts
      summary: Get A List of Tags for Account
      operationId: listTagsForAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tag'
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
  /accounts/{id}/tag-categories:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      tags:
      - Accounts
      summary: Get A List of Tag Categories for Account
      operationId: listTagCategoriesForAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/TagCategory'
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
  /accounts/{id}/projects:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      tags:
      - Accounts
      summary: Get A List of Projects for Account
      operationId: listProjectsForAccount
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
  /profiles:
    get:
      tags:
      - Profiles
      summary: Get A List of Profiles
      operationId: listAllProfiles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
  /profiles/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      tags:
      - Profiles
      summary: View Profile
      operationId: viewProfileWithId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      tags:
      - Profiles
      summary: Modify Profile
      operationId: modifyProfileWithId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
        '403': 
          description: Forbidden
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
  /tags:
    post:
      tags:
      - Tags
      summary: Create Tag
      operationId: createTag
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
    get:
      tags:
      - Tags
      summary: Get A List of Tags
      operationId: listAllTags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tag'
  /tags/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      tags:
      - Tags
      summary: View Tag
      operationId: viewTagWithId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      tags:
      - Tags
      summary: Modify Tag
      operationId: modifyTagWithId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
    delete:
      tags:
      - Tags
      summary: Delete Tag
      operationId: deleteTagWithId
      responses:
        '204':
          description: No Content
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
  /tag-categories:
    post:
      tags:
      - Tags
      summary: Create Tag Category
      operationId: createTagCategory
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCategory'
    get:
      tags:
      - Tags
      summary: Get A List of Tag Categories
      operationId: listAllTagCategories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/TagCategory'
  /tag-categories/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      tags:
      - Tags
      summary: View Tag Category
      operationId: viewTagCategoryWithId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagCategory'
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      tags:
      - Tags
      summary: Modify Tag Category
      operationId: modifyTagCategoryWithId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagCategory'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCategory'
    delete:
      tags:
      - Tags
      summary: Delete Tag Category
      operationId: deleteTagCategoryWithId
      responses:
        '204':
          description: No Content
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
  /projects:
    post:
      tags:
      - Projects
      summary: Create Project
      operationId: createProject
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
    get:
      tags:
      - Projects
      summary: Get A List of Projects
      operationId: listAllProjects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Project'
  /projects/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      tags:
      - Projects
      summary: View Project
      operationId: viewProjectWithId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      tags:
      - Projects
      summary: Modify Project
      operationId: modifyProjectWithId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
        '403': 
          description: Forbidden
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
    delete:
      tags:
      - Projects
      summary: Delete Project
      operationId: deleteProjectWithId
      responses:
        '204':
          description: No Content
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
        '403': 
          description: Forbidden
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
  /projects/{id}/files:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      tags:
      - Projects
      summary: Create File
      operationId: createFileForProject
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
    get:
      tags:
      - Projects
      summary: Get A List of Files
      operationId: listFilesForProject
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/File'
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
  /projects/{id}/files/{id}:
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      tags:
      - Projects
      summary: View File
      operationId: viewFileForProjectWithId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      tags:
      - Projects
      summary: Modify File
      operationId: modifyFileForProjectWithId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
    delete:
      tags:
      - Projects
      summary: Delete File
      operationId: deleteFileForProjectWithId
      responses:
        '204':
          description: No Content
        '401': 
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: string
          readOnly: true 
        email:
          type: string
          format: email
        created_time:
          type: string
          format: date-time 
          writeOnly: true  
        password:
          type: string
          format: password 
          minLength: 8
          writeOnly: true 
    Profile:
      type: object
      properties:
        id:
          type: string
          readOnly: true 
        name:
          type: string
          minLength: 2 
          maxLength: 50
        description:
          type: string
        updated_time:
          type: string
          format: date-time 
          writeOnly: true
        profile_photo:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: string
          readOnly: true 
        tag_category_id:
          type: string
          readOnly: true
        name:
          type: string
          minLength: 2 
          maxLength: 50
    TagCategory:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          minLength: 2 
          maxLength: 50
        color:
          type: string
    File:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        project_id:
          type: string
          readOnly: true
        name:
          type: string
          minLength: 2 
          maxLength: 50
        reference:
          type: string
        uploaded_time:
          type: string
          format: date-time 
          writeOnly: true
    Project:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        account_id:
          type: string
          readOnly: true
        share:
          type: string
          enum:
            - public
            - private
        name:
          type: string
          minLength: 2 
          maxLength: 50
        like_number:
          type: integer
          minLength: 0
        watch_number:
          type: integer
          minLength: 0
        bookmark_number:
          type: integer
          minLength: 0
        from_date:
          type: string
          format: date
        to_date:
          type: string
          format: date
        team_size:
          type: integer
          minLength: 0
        summary:
          type: string
        created_time:
          type: string
          format: date-time 
          writeOnly: true
        photo:
          type: string
    Session:
      type: object
      properties:
        user_id:
          type: string
        auth_header:
          type: string
    # Source: https://github.com/designapis/openapi/blob/main/ch20/openapi.yml
    OASError: 
      type: object
      properties:
        message:
          type: string
          description: Human-readable error message
        errors:
          type: array
          items:
            type: object
            properties:
              path:
                type: string
                description: For input validation errors, identifies where in the JSON request body the error occured
              message:
                type: string
                description: Human-readable error message
              errorCode:
                type: string
                description: Code indicating error type
    Problem: 
      type: object
      properties:
        type:
          type: string
          description: URI indicating error type
        title:
          type: string
          description: Human-readable error title
        status:
          type: integer
          description: HTTP status code
        detail:
          type: string
          description: Human-readable error details
        instance:
          type: string
          description: URI indicating error instance
  securitySchemes:
    SessionToken:
      type: apiKey
      in: header
      name: Authorization
security:
  - SessionToken: []