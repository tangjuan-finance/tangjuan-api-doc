paths:
  /accounts/registration:
    post:
      tags:
      - Accounts
      summary: Start registering An Account
      operationId: registerAccount
      responses:
        '202':
          description: Accepted the request for registering a new account
          headers:
            Location:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError' 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: tangjuan.com@gmail.com
      security: []
  /accounts/registration/{token}:
    parameters:
      - schema:
          type: string
        name: token
        in: path
        required: true
    get:
      tags:
      - Accounts
      summary: Get An Account with unfinished registered
      operationId: viewAccountWithAuthNToken
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
      security: []
    post:
      tags:
      - Accounts
      summary: Finish registering An Account
      operationId: registerAccountWithAuthNToken
      responses:
        '201':
          description: Account Created
          headers:
            Location:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
        '404': 
          description: Not Found
          content:
            application/problem+json: 
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Account'
      security: []
  /sessions:
    post:
      tags:
      - Sessions
      summary: Start Session (Login)
      operationId: startSession
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: tangjuan.com@gmail.com
                password:
                  type: string
                  format: password
      security: []
  /sessions/access-tokens:
    post:
      tags:
      - Sessions
      summary: Update Session
      operationId: updateSession
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/Session'
      security:
        - refreshToken: []
  /sessions/refresh-tokens:
    delete:
      tags:
      - Sessions
      summary: Delete Session (Logout)
      operationId: deleteSession
      responses:
        '204':
          description: No Content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASError'
      security:
        - refreshToken: []
components:
  schemas:
    # Ref: https://github.com/designapis/openapi/blob/main/ch20/openapi.yml
    Session:
      type: object
      properties:
        access_token:
          type: string
          description: "JWT access token with short expiration"
        refresh_token:
          type: string
          description: "Refresh token to obtain a new access token when expired"
        expires_in:
          type: integer
          description: "Access token expiration time in seconds"
          example: 3600
  securitySchemes:
    apiKey:
      description: API key for API User Authentication
      type: apiKey
      name: api-key
      in: header
    accessToken:
      description: Bearer token for accessing private resource
      type: http
      scheme: Bearer
      bearerFormat: JWT
    refreshToken:
      description: Bearer token for refreshing access token
      type: http
      scheme: Bearer
      bearerFormat: JWT